{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Documentos\\\\GitHub\\\\brainboost\\\\frontend\\\\src\\\\context\\\\DataContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContext = /*#__PURE__*/createContext(undefined);\nexport function DataProvider({\n  children\n}) {\n  _s();\n  const [videoData, setVideoData] = useState(null);\n  return /*#__PURE__*/_jsxDEV(VideoContext.Provider, {\n    value: {\n      videoData,\n      setVideoData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(DataProvider, \"6DjjzfxVW7Ei+BSBjWocubp/9wM=\");\n_c = DataProvider;\nexport function useData() {\n  _s2();\n  const context = useContext(VideoContext);\n  if (!context) {\n    throw new Error('useData deve ser usado dentro de um VideoProvider');\n  }\n  return context;\n}\n_s2(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","VideoContext","undefined","DataProvider","children","_s","videoData","setVideoData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/carlo/OneDrive/Documentos/GitHub/brainboost/frontend/src/context/DataContext.tsx"],"sourcesContent":["import { createContext, useState, useContext, ReactNode } from 'react';\r\n\r\ntype Question = {\r\n  id_question: string;\r\n  texto_questao: string;\r\n  pontuacao: number;\r\n  alternatives: string[];\r\n  correct_answer: string;\r\n};\r\n\r\nexport type VideoData = {\r\n  id_video: string;\r\n  link_video: string;\r\n  resumo_video: string;\r\n  questions: Question[];\r\n};\r\n\r\ntype VideoContextType = {\r\n  videoData: VideoData | null;\r\n  setVideoData: (data: VideoData) => void;\r\n};\r\n\r\nconst VideoContext = createContext<VideoContextType | undefined>(undefined);\r\n\r\nexport function DataProvider({ children }: { children: ReactNode }) {\r\n  const [videoData, setVideoData] = useState<VideoData | null>(null);\r\n\r\n  return (\r\n    <VideoContext.Provider value={{ videoData, setVideoData }}>\r\n      {children}\r\n    </VideoContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useData() {\r\n  const context = useContext(VideoContext);\r\n  if (!context) {\r\n    throw new Error('useData deve ser usado dentro de um VideoProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsBvE,MAAMC,YAAY,gBAAGL,aAAa,CAA+BM,SAAS,CAAC;AAE3E,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAmB,IAAI,CAAC;EAElE,oBACEG,OAAA,CAACC,YAAY,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEH,SAAS;MAAEC;IAAa,CAAE;IAAAH,QAAA,EACvDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAACR,EAAA,CAReF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAU5B,OAAO,SAASY,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,OAAO,GAAGnB,UAAU,CAACG,YAAY,CAAC;EACxC,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
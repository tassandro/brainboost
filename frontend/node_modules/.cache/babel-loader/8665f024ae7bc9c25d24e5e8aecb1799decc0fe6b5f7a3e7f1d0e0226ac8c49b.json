{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Documentos\\\\GitHub\\\\brainboost\\\\frontend\\\\src\\\\tests\\\\ApiSimulator.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useData } from '@/context/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Simulate() {\n  _s();\n  const {\n    setVideoData\n  } = useData();\n  const handleSimulate = () => {\n    const simulatedData = {\n      id_video: \"fake_video_id\",\n      link_video: \"https://youtu.be/dQw4w9WgXcQ\",\n      resumo_video: \"Este é um resumo de teste sobre o vídeo simulado.\",\n      questions: Array.from({\n        length: 10\n      }, (_, i) => ({\n        id_question: `q${i + 1}`,\n        texto_questao: `Qual é a resposta da questão ${i + 1}?`,\n        pontuacao: 10,\n        alternatives: ['Alternativa A', 'Alternativa B', 'Alternativa C', 'Alternativa D'],\n        correct_answer: 'Alternativa A',\n        userAnswer: 'Alternativa B' // simula uma resposta errada propositalmente\n      }))\n    };\n    setVideoData(simulatedData);\n    console.log(\"Dados simulados aplicados ao contexto!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded bg-gray-100 shadow flex items-center mx-auto w-[40%]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold mb-2\",\n      children: \"Simulador de API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSimulate,\n      className: \"btn w-[300px]\",\n      children: \"Simular Resposta Completa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Simulate, \"l0kGN03y0CLiH1UFGVWT5/MTIA0=\", false, function () {\n  return [useData];\n});\n_c = Simulate;\nvar _c;\n$RefreshReg$(_c, \"Simulate\");","map":{"version":3,"names":["React","useData","jsxDEV","_jsxDEV","Simulate","_s","setVideoData","handleSimulate","simulatedData","id_video","link_video","resumo_video","questions","Array","from","length","_","i","id_question","texto_questao","pontuacao","alternatives","correct_answer","userAnswer","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/carlo/OneDrive/Documentos/GitHub/brainboost/frontend/src/tests/ApiSimulator.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useData } from '@/context/DataContext';\r\n\r\nexport default function Simulate() {\r\n  const { setVideoData } = useData();\r\n\r\n  const handleSimulate = () => {\r\n    const simulatedData = {\r\n      id_video: \"fake_video_id\",\r\n      link_video: \"https://youtu.be/dQw4w9WgXcQ\",\r\n      resumo_video: \"Este é um resumo de teste sobre o vídeo simulado.\",\r\n      questions: Array.from({ length: 10 }, (_, i) => ({\r\n        id_question: `q${i + 1}`,\r\n        texto_questao: `Qual é a resposta da questão ${i + 1}?`,\r\n        pontuacao: 10,\r\n        alternatives: ['Alternativa A', 'Alternativa B', 'Alternativa C', 'Alternativa D'],\r\n        correct_answer: 'Alternativa A',\r\n        userAnswer: 'Alternativa B', // simula uma resposta errada propositalmente\r\n      })),\r\n    };\r\n\r\n    setVideoData(simulatedData);\r\n    console.log(\"Dados simulados aplicados ao contexto!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded bg-gray-100 shadow flex items-center mx-auto w-[40%]\">\r\n      <h2 className=\"text-lg font-bold mb-2\">Simulador de API</h2>\r\n      <button\r\n        onClick={handleSimulate}\r\n        className=\"btn w-[300px]\"\r\n      >\r\n        Simular Resposta Completa\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAa,CAAC,GAAGL,OAAO,CAAC,CAAC;EAElC,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,aAAa,GAAG;MACpBC,QAAQ,EAAE,eAAe;MACzBC,UAAU,EAAE,8BAA8B;MAC1CC,YAAY,EAAE,mDAAmD;MACjEC,SAAS,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;QAC/CC,WAAW,EAAE,IAAID,CAAC,GAAG,CAAC,EAAE;QACxBE,aAAa,EAAE,gCAAgCF,CAAC,GAAG,CAAC,GAAG;QACvDG,SAAS,EAAE,EAAE;QACbC,YAAY,EAAE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC;QAClFC,cAAc,EAAE,eAAe;QAC/BC,UAAU,EAAE,eAAe,CAAE;MAC/B,CAAC,CAAC;IACJ,CAAC;IAEDjB,YAAY,CAACE,aAAa,CAAC;IAC3BgB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACvD,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,yEAAyE;IAAAC,QAAA,gBACtFxB,OAAA;MAAIuB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5D5B,OAAA;MACE6B,OAAO,EAAEzB,cAAe;MACxBmB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CAjCuBD,QAAQ;EAAA,QACLH,OAAO;AAAA;AAAAgC,EAAA,GADV7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
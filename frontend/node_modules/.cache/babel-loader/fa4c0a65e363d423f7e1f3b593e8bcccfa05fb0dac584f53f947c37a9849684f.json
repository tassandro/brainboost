{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Documentos\\\\GitHub\\\\brainboost\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//npm install jwt-decode\nimport { jwtDecode } from 'jwt-decode';\nimport API from '../api';\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction safelyDecode(token) {\n  return jwtDecode(token);\n}\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const verifyToken = async () => {\n      try {\n        console.log(\"Verificando token...\");\n        const res = await API.get('/verify-token');\n        console.log(res.data.user);\n        setUser(res.data.user);\n      } catch (err) {\n        console.error('Token inválido ou expirado', err);\n        logout();\n      }\n    };\n    if (storedToken) {\n      setToken(storedToken);\n      try {\n        const decoded = safelyDecode(storedToken);\n        setUser({\n          id: decoded.id\n        }); // ou decoded.id_user dependendo do payload\n        verifyToken(); // Verifica o token assim que o componente é montado\n      } catch (err) {\n        console.error(\"Erro ao decodificar token:\", err);\n        logout(); // Se o token não puder ser decodificado, faça logout\n      }\n    }\n    setLoading(false); // Finaliza o carregamento após ler o localStorage\n  }, []);\n  const login = newToken => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n    try {\n      const decoded = safelyDecode(newToken);\n      setUser({\n        id: decoded.id\n      }); // ou decoded.id_user\n    } catch (err) {\n      console.error(\"Erro ao decodificar token no login:\", err);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const isAuthenticated = !!token;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      token,\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5m4vrLY0cVYy7JfVO7Fvj1yHv48=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport async function verifyToken() {\n  try {\n    console.log(\"Verificando token...\");\n    const res = await API.get(\"/verify-token\");\n    return res.data.user;\n  } catch (err) {\n    console.error(\"Erro ao verificar token:\", err);\n    throw new Error(\"Token inválido\");\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["jwtDecode","API","React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","safelyDecode","token","AuthContext","undefined","AuthProvider","children","_s","setToken","loading","setLoading","user","setUser","storedToken","localStorage","getItem","verifyToken","console","log","res","get","data","err","error","logout","decoded","id","login","newToken","setItem","removeItem","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/carlo/OneDrive/Documentos/GitHub/brainboost/frontend/src/context/AuthContext.tsx"],"sourcesContent":["//npm install jwt-decode\r\nimport {jwtDecode} from 'jwt-decode'\r\nimport API from '../api';\r\nimport {User} from '@/services/userServices'\r\n\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  ReactNode\r\n} from 'react';\r\n\r\ntype AuthContextType = {\r\n  isAuthenticated: boolean;\r\n  token: string | null;\r\n  user: { id: string } | null;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n  loading: boolean;\r\n};\r\n\r\ntype DecodedToken = { id: string };\r\n\r\nfunction safelyDecode(token: string): DecodedToken {\r\n  return jwtDecode<DecodedToken>(token);\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState<{ id: string } | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const verifyToken = async () => {\r\n      try {\r\n        console.log(\"Verificando token...\");\r\n        const res = await API.get<{ user: User }>('/verify-token');\r\n        console.log(res.data.user);\r\n        setUser(res.data.user);\r\n      } catch (err) {\r\n        console.error('Token inválido ou expirado', err);\r\n        logout();\r\n      }\r\n    };\r\n\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      try {\r\n        const decoded = safelyDecode(storedToken);\r\n        setUser({ id: decoded.id }); // ou decoded.id_user dependendo do payload\r\n        verifyToken(); // Verifica o token assim que o componente é montado\r\n      } catch (err) {\r\n        console.error(\"Erro ao decodificar token:\", err);\r\n        logout(); // Se o token não puder ser decodificado, faça logout\r\n\r\n      }\r\n    }\r\n    setLoading(false); // Finaliza o carregamento após ler o localStorage\r\n  }, []);\r\n\r\n  const login = (newToken: string) => {\r\n    localStorage.setItem('token', newToken);\r\n    setToken(newToken);\r\n    try {\r\n      const decoded = safelyDecode(newToken);\r\n      setUser({ id: decoded.id }); // ou decoded.id_user\r\n    } catch (err) {\r\n      console.error(\"Erro ao decodificar token no login:\", err);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = !!token;\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isAuthenticated, token, user, login, logout, loading }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context)\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  return context;\r\n};\r\n\r\nexport async function verifyToken() {\r\n  try {\r\n    console.log(\"Verificando token...\");\r\n    const res = await API.get<{ user: User }>(\"/verify-token\");\r\n    return res.data.user;\r\n  } catch (err) {\r\n    console.error(\"Erro ao verificar token:\", err);\r\n    throw new Error(\"Token inválido\");\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}